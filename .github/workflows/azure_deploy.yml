name: Build and Deploy Table Extractor to Azure

on:
  push:
    branches:
      - main  # Or your default branch (e.g., master)
  workflow_dispatch: # Allows manual triggering from the Actions tab

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # This runner is Linux x86-64 by default
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx # Good practice, though not strictly for --platform here as runner is already x86-64
      uses: docker/setup-buildx-action@v3

    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: . # Build context is the root of your repo
        file: ./Dockerfile # Path to your Dockerfile
        push: true # Automatically push after building
        tags: | # Multiple tags
          ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.ACR_IMAGE_NAME }}:${{ github.sha }}
          ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.ACR_IMAGE_NAME }}:latest
        # No need for --platform linux/amd64 here as the runner is already that architecture

    - name: Log in to Azure CLI
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App for Containers
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        images: ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.ACR_IMAGE_NAME }}:${{ github.sha }} # Deploy the uniquely tagged image

    - name: Azure logout
      run: |
        az logout
        az account clear
      if: always() # Ensures logout runs even if prior steps fail